{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {}\n  setUser(user) {\n    this.user = user;\n  }\n  getUser() {\n    return this.user;\n  }\n  isLogged() {\n    console.log(\"ðŸš€ ~ file: auth.service.ts:23 ~ AuthService ~ isLogged ~ this.user:\", this.user);\n    console.log(\"ðŸš€ ~ file: auth.service.ts:24 ~ AuthService ~ isLogged ~ this.user != undefined:\", this.user != undefined);\n    return this.user != undefined;\n  }\n  static #_ = this.Éµfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n    token: AuthService,\n    factory: AuthService.Éµfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","setUser","user","getUser","isLogged","console","log","undefined","_","_2","factory","Éµfac","providedIn"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\recipes-book\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private user!: User;\n\n  constructor() { }\n\n  setUser(user: User) {\n    this.user = user;\n  }\n  \n  getUser(): User {\n    return this.user;\n  }\n\n  isLogged(): boolean {\n    console.log(\"ðŸš€ ~ file: auth.service.ts:23 ~ AuthService ~ isLogged ~ this.user:\", this.user)\n    console.log(\"ðŸš€ ~ file: auth.service.ts:24 ~ AuthService ~ isLogged ~ this.user != undefined:\", this.user != undefined)\n    return this.user != undefined\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EAItBC,YAAA,GAAgB;EAEhBC,OAAOA,CAACC,IAAU;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACD,IAAI;EAClB;EAEAE,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,qEAAqE,EAAE,IAAI,CAACJ,IAAI,CAAC;IAC7FG,OAAO,CAACC,GAAG,CAAC,kFAAkF,EAAE,IAAI,CAACJ,IAAI,IAAIK,SAAS,CAAC;IACvH,OAAO,IAAI,CAACL,IAAI,IAAIK,SAAS;EAC/B;EAAC,QAAAC,CAAA,G;qBAlBUT,WAAW;EAAA;EAAA,QAAAU,EAAA,G;WAAXV,WAAW;IAAAW,OAAA,EAAXX,WAAW,CAAAY,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}