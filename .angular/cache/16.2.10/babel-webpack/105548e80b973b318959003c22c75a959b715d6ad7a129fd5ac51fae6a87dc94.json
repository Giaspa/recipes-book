{"ast":null,"code":"import { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { RecipeService } from '../services/recipe.service';\nimport { catchError, of } from 'rxjs';\nexport const recipeResolver = (route, state) => {\n  const recipeService = inject(RecipeService);\n  const router = inject(Router);\n  const ID = route.data['id'];\n  console.log(\"ðŸš€ ~ file: recipe.resolver.ts:11 ~ ID:\", ID);\n  return recipeService.getRecipe(ID).pipe(catchError(error => {\n    console.error(error);\n    router.navigate(['']);\n    return of(null);\n  }));\n};","map":{"version":3,"names":["Router","inject","RecipeService","catchError","of","recipeResolver","route","state","recipeService","router","ID","data","console","log","getRecipe","pipe","error","navigate"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\recipes-book\\src\\app\\resolvers\\recipe.resolver.ts"],"sourcesContent":["import { ResolveFn, Router } from '@angular/router';\nimport { Recipe } from '../model/recipe.model';\nimport { inject } from '@angular/core';\nimport { RecipeService } from '../services/recipe.service';\nimport { catchError, of } from 'rxjs';\n\nexport const recipeResolver: ResolveFn<Recipe | null> = (route, state) => {\n  const recipeService = inject(RecipeService);\n  const router = inject(Router);\n  const ID = route.data['id'];\n  console.log(\"ðŸš€ ~ file: recipe.resolver.ts:11 ~ ID:\", ID)\n\n  return recipeService.getRecipe(ID).pipe(\n    catchError((error) => {\n      console.error(error);\n\n      router.navigate(['']);\n      \n      return of(null);\n    })\n  );\n}"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,iBAAiB;AAEnD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,UAAU,EAAEC,EAAE,QAAQ,MAAM;AAErC,OAAO,MAAMC,cAAc,GAA6BA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvE,MAAMC,aAAa,GAAGP,MAAM,CAACC,aAAa,CAAC;EAC3C,MAAMO,MAAM,GAAGR,MAAM,CAACD,MAAM,CAAC;EAC7B,MAAMU,EAAE,GAAGJ,KAAK,CAACK,IAAI,CAAC,IAAI,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEH,EAAE,CAAC;EAEzD,OAAOF,aAAa,CAACM,SAAS,CAACJ,EAAE,CAAC,CAACK,IAAI,CACrCZ,UAAU,CAAEa,KAAK,IAAI;IACnBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;IAEpBP,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAErB,OAAOb,EAAE,CAAC,IAAI,CAAC;EACjB,CAAC,CAAC,CACH;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}