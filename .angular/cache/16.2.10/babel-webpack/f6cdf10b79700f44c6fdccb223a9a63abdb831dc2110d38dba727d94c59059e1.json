{"ast":null,"code":"import { of } from 'rxjs';\nimport { recipesMock } from '../assets/mocks/recipe';\nimport * as i0 from \"@angular/core\";\nexport class RecipeService {\n  constructor() {}\n  getRecipes() {\n    return of(recipesMock);\n  }\n  getRecipe(id) {\n    const RECIPE = recipesMock.find(recipe => recipe.id === id);\n    // if (RECIPE) {\n    return of(RECIPE);\n    // } else {\n    //   const errorMessage = `Recipe with id ${id} not found.`;\n    //   return throwError(new Error(errorMessage));\n    // }\n  }\n  static #_ = this.ɵfac = function RecipeService_Factory(t) {\n    return new (t || RecipeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeService,\n    factory: RecipeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","recipesMock","RecipeService","constructor","getRecipes","getRecipe","id","RECIPE","find","recipe","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\recipes-book\\src\\app\\services\\recipe.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Recipe } from '../model/recipe.model';\nimport { recipesMock } from '../assets/mocks/recipe';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  constructor() { }\n\n  getRecipes(): Observable<Recipe[]>{\n    return of(recipesMock)\n  }\n\n  getRecipe(id: string): Observable<Recipe>{\n    const RECIPE = recipesMock.find(recipe => recipe.id === id);\n\n    // if (RECIPE) {\n      return of(RECIPE!);\n    // } else {\n    //   const errorMessage = `Recipe with id ${id} not found.`;\n    //   return throwError(new Error(errorMessage));\n    // }\n  }\n}\n"],"mappings":"AACA,SAAqBA,EAAE,QAAoB,MAAM;AAEjD,SAASC,WAAW,QAAQ,wBAAwB;;AAKpD,OAAM,MAAOC,aAAa;EAExBC,YAAA,GAAgB;EAEhBC,UAAUA,CAAA;IACR,OAAOJ,EAAE,CAACC,WAAW,CAAC;EACxB;EAEAI,SAASA,CAACC,EAAU;IAClB,MAAMC,MAAM,GAAGN,WAAW,CAACO,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACH,EAAE,KAAKA,EAAE,CAAC;IAE3D;IACE,OAAON,EAAE,CAACO,MAAO,CAAC;IACpB;IACA;IACA;IACA;EACF;EAAC,QAAAG,CAAA,G;qBAjBUR,aAAa;EAAA;EAAA,QAAAS,EAAA,G;WAAbT,aAAa;IAAAU,OAAA,EAAbV,aAAa,CAAAW,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}