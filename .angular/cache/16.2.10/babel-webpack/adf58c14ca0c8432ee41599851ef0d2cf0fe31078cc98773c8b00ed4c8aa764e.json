{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { disabledBtn, goldHoveringBtn } from 'src/app/constants/buttons';\nimport { EmptyPagination } from 'src/app/model/pagination';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction CustomPaginatorComponent_ng_container_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CustomPaginatorComponent_ng_container_6_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const page_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changePage(page_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const page_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(\"text-amber-950\" + ctx_r2.goldHoveringBtn + ctx_r2.disabledBtn);\n    i0.ɵɵclassProp(\"active\", ctx_r2.isActivePage(page_r1));\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isActivePage(page_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", page_r1, \" \");\n  }\n}\nfunction CustomPaginatorComponent_ng_container_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵtext(1, \" ... \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"text-amber-950\" + ctx_r4.goldHoveringBtn + ctx_r4.disabledBtn);\n  }\n}\nfunction CustomPaginatorComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CustomPaginatorComponent_ng_container_6_button_1_Template, 2, 6, \"button\", 8);\n    i0.ɵɵtemplate(2, CustomPaginatorComponent_ng_container_6_ng_template_2_Template, 2, 2, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const page_r1 = ctx.$implicit;\n    const _r3 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isNaN(page_r1))(\"ngIfElse\", _r3);\n  }\n}\nexport class CustomPaginatorComponent {\n  constructor() {\n    this.pagination = new EmptyPagination();\n    this.changePageEmitter = new EventEmitter();\n    this.goldHoveringBtn = goldHoveringBtn;\n    this.disabledBtn = disabledBtn;\n    this.pageArray = [];\n  }\n  isStart() {\n    return this.pagination.currentPage === 0;\n  }\n  canGoBack() {\n    return this.pagination.currentPage > 0;\n  }\n  canGoAhead() {\n    return this.pagination.currentPage + 1 < this.pagination.totalPages;\n  }\n  isEnd() {\n    return this.pagination.currentPage + 1 === this.pagination.totalPages;\n  }\n  isActivePage(pageNumber) {\n    if (typeof pageNumber === 'string') {\n      return false;\n    }\n    return this.pagination.currentPage + 1 === pageNumber;\n  }\n  changePage(pageNumber) {\n    if (typeof pageNumber === 'string') {\n      return;\n    }\n    const NEW_PAGE = pageNumber - 1;\n    this.changePageEmitter.emit(NEW_PAGE);\n  }\n  getPageArray() {\n    let pageArray = ['...'];\n    const TOTAL_PAGES = this.pagination.totalPages;\n    const ACTUAL_PAGE = this.pagination.currentPage + 1;\n    const MAX_VISIBLE_PAGES = 5;\n    // //if TOTAL_PAGES < 5\n    // //if TOTAL_PAGES > 5  --- !(TOTAL_PAGES -3 > actualPage > TOTAL_PAGES)\n    // //if TOTAL_PAGES > 5  --- TOTAL_PAGES -3 > actualPage > TOTAL_PAGES\n    // if (TOTAL_PAGES <= 5) {\n    //   pageArray = Array.from({length: TOTAL_PAGES}, (_, index) => index +1);\n    // } else {\n    //   const last4minLimit = TOTAL_PAGES - 3;\n    //   if (ACTUAL_PAGE >= last4minLimit && ACTUAL_PAGE <= (TOTAL_PAGES)) {\n    //     //todo... example: pageArray = ['...', 7, 8, 9, 10]\n    //   } else {\n    //     //todo... example: pageArray = [1, 2, '...', 9, 10] \n    //   }\n    // }\n    if (TOTAL_PAGES <= MAX_VISIBLE_PAGES) {\n      // Se ci sono 5 pagine o meno, mostro tutte le pagine senza i puntini di sospensione\n      return Array.from({\n        length: TOTAL_PAGES\n      }, (_, index) => index + 1);\n    } else {\n      const pageArray = [];\n      if (ACTUAL_PAGE <= 2) {\n        // Mostra le prime 5 pagine\n        pageArray.push(...Array.from({\n          length: MAX_VISIBLE_PAGES\n        }, (_, index) => index + 1));\n      } else if (ACTUAL_PAGE >= TOTAL_PAGES - 1) {\n        // Mostra le ultime 5 pagine\n        pageArray.push('...', ...Array.from({\n          length: MAX_VISIBLE_PAGES - 1\n        }, (_, index) => TOTAL_PAGES - MAX_VISIBLE_PAGES + index + 1));\n      } else {\n        // Mostra 5 pagine centrando attorno alla pagina attuale\n        pageArray.push('...', ACTUAL_PAGE - 1, ACTUAL_PAGE, ACTUAL_PAGE + 1, '...');\n      }\n      return pageArray;\n    }\n  }\n  isNaN(value) {\n    return isNaN(value);\n  }\n  static #_ = this.ɵfac = function CustomPaginatorComponent_Factory(t) {\n    return new (t || CustomPaginatorComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomPaginatorComponent,\n    selectors: [[\"custom-paginator\"]],\n    inputs: {\n      pagination: \"pagination\"\n    },\n    outputs: {\n      changePageEmitter: \"changePageEmitter\"\n    },\n    decls: 11,\n    vars: 13,\n    consts: [[1, \"flex\", \"flex-row\", \"justify-between\", \"gap-4\"], [3, \"disabled\"], [1, \"fa-solid\", \"fa-angles-left\"], [1, \"fa-solid\", \"fa-angle-left\"], [1, \"flex-1\", \"flex\", \"gap-4\", \"justify-center\"], [4, \"ngFor\", \"ngForOf\"], [1, \"fa-solid\", \"fa-angle-right\"], [1, \"fa-solid\", \"fa-angles-right\"], [3, \"active\", \"disabled\", \"class\", \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"dots\", \"\"], [3, \"disabled\", \"click\"], [\"disabled\", \"\"]],\n    template: function CustomPaginatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵelement(2, \"i\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵelement(4, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, CustomPaginatorComponent_ng_container_6_Template, 4, 2, \"ng-container\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 1);\n        i0.ɵɵelement(8, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 1);\n        i0.ɵɵelement(10, \"i\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(\"text-amber-950\" + ctx.goldHoveringBtn + ctx.disabledBtn);\n        i0.ɵɵproperty(\"disabled\", ctx.isStart());\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(\"text-amber-950\" + ctx.goldHoveringBtn + ctx.disabledBtn);\n        i0.ɵɵproperty(\"disabled\", !ctx.canGoBack());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getPageArray());\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMap(\"text-amber-950\" + ctx.goldHoveringBtn + ctx.disabledBtn);\n        i0.ɵɵproperty(\"disabled\", !ctx.canGoAhead());\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(\"text-amber-950\" + ctx.goldHoveringBtn + ctx.disabledBtn);\n        i0.ɵɵproperty(\"disabled\", ctx.isEnd());\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf],\n    styles: [\"button.active[_ngcontent-%COMP%] {\\n  color: #451a03 !important;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb21tb25zL2N1c3RvbS1wYWdpbmF0b3IvY3VzdG9tLXBhZ2luYXRvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHSTtFQUNJLHlCQUFBO0VBRUEsaUJBQUE7QUFIUiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi9zdHlsZXMvYXNzZXRzLnNjc3NcIjtcclxuXHJcbmJ1dHRvbiB7XHJcbiAgICAmLmFjdGl2ZSB7XHJcbiAgICAgICAgY29sb3I6ICRicm93biAhaW1wb3J0YW50O1xyXG4gICAgICAgIC8vIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","disabledBtn","goldHoveringBtn","EmptyPagination","i0","ɵɵelementStart","ɵɵlistener","CustomPaginatorComponent_ng_container_6_button_1_Template_button_click_0_listener","ɵɵrestoreView","_r7","page_r1","ɵɵnextContext","$implicit","ctx_r5","ɵɵresetView","changePage","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","ctx_r2","ɵɵclassProp","isActivePage","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","ctx_r4","ɵɵelementContainerStart","ɵɵtemplate","CustomPaginatorComponent_ng_container_6_button_1_Template","CustomPaginatorComponent_ng_container_6_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵelementContainerEnd","ctx_r0","isNaN","_r3","CustomPaginatorComponent","constructor","pagination","changePageEmitter","pageArray","isStart","currentPage","canGoBack","canGoAhead","totalPages","isEnd","pageNumber","NEW_PAGE","emit","getPageArray","TOTAL_PAGES","ACTUAL_PAGE","MAX_VISIBLE_PAGES","Array","from","length","_","index","push","value","_2","selectors","inputs","outputs","decls","vars","consts","template","CustomPaginatorComponent_Template","rf","ctx","ɵɵelement","CustomPaginatorComponent_ng_container_6_Template"],"sources":["C:\\Users\\Gianluca\\Desktop\\MyProject\\recipes-book\\src\\app\\components\\commons\\custom-paginator\\custom-paginator.component.ts","C:\\Users\\Gianluca\\Desktop\\MyProject\\recipes-book\\src\\app\\components\\commons\\custom-paginator\\custom-paginator.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { disabledBtn, goldHoveringBtn } from 'src/app/constants/buttons';\nimport { EmptyPagination, Pagination } from 'src/app/model/pagination';\n\n@Component({\n  selector: 'custom-paginator',\n  templateUrl: './custom-paginator.component.html',\n  styleUrls: ['./custom-paginator.component.scss']\n})\nexport class CustomPaginatorComponent {\n  @Input() pagination: Pagination<any> = new EmptyPagination();\n  @Output() changePageEmitter: EventEmitter<number> = new EventEmitter<number>();\n  goldHoveringBtn = goldHoveringBtn;\n  disabledBtn = disabledBtn;\n  pageArray: number[] = [];\n\n  isStart(): boolean {\n    return this.pagination.currentPage === 0;\n  }\n\n  canGoBack(): boolean {\n    return this.pagination.currentPage > 0;\n  }\n\n  canGoAhead(): boolean {\n    return (this.pagination.currentPage + 1) < this.pagination.totalPages;\n  }\n\n  isEnd(): boolean {\n    return (this.pagination.currentPage + 1) === this.pagination.totalPages;\n  }\n\n  isActivePage(pageNumber: number | string): boolean {\n    if(typeof pageNumber === 'string'){\n      return false\n    }\n\n    return (this.pagination.currentPage + 1) === pageNumber;\n  }\n\n  changePage(pageNumber: number | string) {\n    if(typeof pageNumber === 'string'){\n      return\n    }\n  \n    const NEW_PAGE = pageNumber - 1;\n    this.changePageEmitter.emit(NEW_PAGE);\n  }\n\n  getPageArray(): (number | string)[] {\n    let pageArray: (number | string)[] = ['...'];\n    const TOTAL_PAGES: number = this.pagination.totalPages;\n    const ACTUAL_PAGE: number = this.pagination.currentPage + 1;\n    const MAX_VISIBLE_PAGES: number = 5;\n    // //if TOTAL_PAGES < 5\n    // //if TOTAL_PAGES > 5  --- !(TOTAL_PAGES -3 > actualPage > TOTAL_PAGES)\n    // //if TOTAL_PAGES > 5  --- TOTAL_PAGES -3 > actualPage > TOTAL_PAGES\n\n    // if (TOTAL_PAGES <= 5) {\n    //   pageArray = Array.from({length: TOTAL_PAGES}, (_, index) => index +1);\n    // } else {\n    //   const last4minLimit = TOTAL_PAGES - 3;\n\n    //   if (ACTUAL_PAGE >= last4minLimit && ACTUAL_PAGE <= (TOTAL_PAGES)) {\n    //     //todo... example: pageArray = ['...', 7, 8, 9, 10]\n    //   } else {\n    //     //todo... example: pageArray = [1, 2, '...', 9, 10] \n    //   }\n    // }\n\n    if (TOTAL_PAGES <= MAX_VISIBLE_PAGES) {\n      // Se ci sono 5 pagine o meno, mostro tutte le pagine senza i puntini di sospensione\n      return Array.from({ length: TOTAL_PAGES }, (_, index) => index + 1);\n    } else {\n      const pageArray: (number | string)[] = [];\n  \n      if (ACTUAL_PAGE <= 2) {\n        // Mostra le prime 5 pagine\n        pageArray.push(...Array.from({ length: MAX_VISIBLE_PAGES }, (_, index) => index + 1));\n      } else if (ACTUAL_PAGE >= TOTAL_PAGES - 1) {\n        // Mostra le ultime 5 pagine\n        pageArray.push('...', ...Array.from({ length: MAX_VISIBLE_PAGES - 1 }, (_, index) => TOTAL_PAGES - MAX_VISIBLE_PAGES + index + 1));\n      } else {\n        // Mostra 5 pagine centrando attorno alla pagina attuale\n        pageArray.push('...', ACTUAL_PAGE - 1, ACTUAL_PAGE, ACTUAL_PAGE + 1, '...');\n      }\n  \n      return pageArray;\n    }\n  }\n\n  isNaN(value: any): boolean{\n    return isNaN(value)\n  }\n}\n","<div class=\"flex flex-row justify-between gap-4\">\n    <!-- Start -->\n    <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" [disabled]=\"isStart()\">\n        <i class=\"fa-solid fa-angles-left\"></i>\n    </button>\n\n    <!-- Back -->\n    <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" [disabled]=\"!canGoBack()\">\n        <i class=\"fa-solid fa-angle-left\"></i>\n    </button>\n\n    <!-- Pages -->\n    <!-- 1 -->\n    <!-- 2 -->\n    <!-- ... -->\n    <!-- 6 -->\n    <!-- 7 -->\n    <div class=\"flex-1 flex gap-4 justify-center\">\n        <!-- <button [class.active]=\"isActivePage(1)\" [disabled]=\"isActivePage(1)\"\n            [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" (click)=\"changePage(1)\">\n            1\n        </button>\n        <button [class.active]=\"isActivePage(2)\" [disabled]=\"isActivePage(2)\" [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" (click)=\"changePage(2)\">\n            2\n        </button>\n        <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" disabled>\n            ...\n        </button>\n        <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\">\n            6\n        </button>\n        <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\">\n            7\n        </button> -->\n        <ng-container *ngFor=\"let page of getPageArray()\">\n            <button *ngIf=\"!isNaN(page) else dots\" [class.active]=\"isActivePage(page)\" [disabled]=\"isActivePage(page)\"\n                [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" (click)=\"changePage(page)\">\n                {{page}}\n            </button>\n\n            <ng-template #dots>\n                <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" disabled>\n                    ...\n                </button>\n            </ng-template>\n        </ng-container>\n    </div>\n\n    <!-- Ahead -->\n    <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" [disabled]=\"!canGoAhead()\">\n        <i class=\"fa-solid fa-angle-right\"></i>\n    </button>\n\n    <!-- End -->\n    <button [class]=\"'text-amber-950'+ goldHoveringBtn + disabledBtn\" [disabled]=\"isEnd()\">\n        <i class=\"fa-solid fa-angles-right\"></i>\n    </button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}